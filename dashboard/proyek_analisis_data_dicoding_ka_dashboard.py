# -*- coding: utf-8 -*-
"""Proyek Analisis Data Dicoding_KA_dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XmBr00ZHitfiumGkAX4MGSlSklgCECrO
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st

# Setup untuk tampilan visual
sns.set(style="dark")

# Membaca data dari file CSV
hour_df = pd.read_csv("data_.csv")

# Konversi kolom tanggal
hour_df["dteday"] = pd.to_datetime(hour_df["dteday"])

# Sidebar untuk filter tanggal
with st.sidebar:
    st.image("https://storage.googleapis.com/gweb-uniblog-publish-prod/original_images/image1_hH9B4gs.jpg")
    start_date, end_date = st.date_input(
        label="Rentang Waktu",
        min_value=hour_df["dteday"].min(),
        max_value=hour_df["dteday"].max(),
        value=[hour_df["dteday"].min(), hour_df["dteday"].max()]
    )

# Filter berdasarkan tanggal yang dipilih
main_df_hour = hour_df[(hour_df["dteday"] >= str(start_date)) & (hour_df["dteday"] <= str(end_date))]

# Total peminjaman berdasarkan jam
hour_count_df = main_df_hour.groupby("hours")["count_cr"].sum().reset_index()

# Visualisasi jumlah peminjaman per jam
st.subheader("Total Peminjaman Sepeda per Jam")
fig, ax = plt.subplots(figsize=(12, 6))
sns.lineplot(x="hours", y="count_cr", data=hour_count_df, marker="o", color="#0288D1", ax=ax)
ax.set_xlabel("Jam")
ax.set_ylabel("Jumlah Peminjaman")
ax.set_title("Tren Peminjaman Sepeda per Jam")
st.pyplot(fig)

# Jam dengan peminjaman terbanyak & tersedikit
st.subheader("Jam Paling Banyak & Sedikit Peminjaman")
fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(18, 6))
sns.barplot(x="hours", y="count_cr", hue="hours", data=hour_count_df.nlargest(5, "count_cr"), ax=ax[0], palette="Greens")
ax[0].set_title("Jam dengan Peminjaman Terbanyak")

sns.barplot(x="hours", y="count_cr", hue="hours", data=hour_count_df.nsmallest(5, "count_cr"), ax=ax[1], palette="Reds")
ax[1].set_title("Jam dengan Peminjaman Paling Sedikit")
st.pyplot(fig)

# Peminjaman berdasarkan musim
season_df = main_df_hour.groupby("season")["count_cr"].sum().reset_index()
st.subheader("Peminjaman Berdasarkan Musim")
fig, ax = plt.subplots(figsize=(12, 6))
sns.barplot(x="season", y="count_cr", data=season_df, palette="coolwarm", ax=ax)
ax.set_xlabel("Musim")
ax.set_ylabel("Total Peminjaman")
ax.set_title("Peminjaman Sepeda Berdasarkan Musim")
st.pyplot(fig)
plt.show()

# Menampilkan metrik utama
col1, col2 = st.columns(2)
with col1:
    st.metric("Total Peminjaman", value=main_df_hour["count_cr"].sum())
with col2:
    st.metric("Jumlah Data", value=len(main_df_hour))

st.subheader("ğŸš¨Dashboard Bike SharingğŸš²")